#!/usr/bin/env gosh

(define (main args)
  (define size (string->number (cadr args)))
  (define row (make-vector size #t))
  (define up (make-vector (- (* 2 size) 1) #t))
  (define down (make-vector (- (* 2 size) 1) #t))
  (define board (make-vector size 0))
  (define (queen n)
    (if (>= n size)
      (begin
        (dotimes (i (- size 1)) (display (vector-ref board i)) (display " "))
        (display (vector-ref board (- size 1))) (newline))
      (dotimes (i size)
        (if (and (vector-ref row i) (vector-ref up (+ n i)) (vector-ref down (+ (- n i) (- size 1))))
          (begin (vector-set! row i #f)
                 (vector-set! up (+ n i) #f)
                 (vector-set! down (+ (- n i) (- size 1)) #f)
                 (vector-set! board n (+ i 1))
                 (queen (+ n 1))
                 (vector-set! row i #t)
                 (vector-set! up (+ n i) #t)
                 (vector-set! down (+ (- n i) (- size 1)) #t))))))
  (queen 0))
